name: Release

on:
  push:
    tags:
      - "*"

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Use .NET SDK from global.json
        uses: actions/setup-dotnet@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          check-latest: true
          node-version-file: 'src/UI/package.json'
          cache: 'yarn'
          cache-dependency-path: 'src/UI/yarn.lock'
      - name: Build UI
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          yarn config set strict-ssl false
          yarn --cwd src/UI
          yarn --cwd src/UI build
          rm -rf src/Server/src/AspNet/UI
          mkdir src/Server/src/AspNet/UI/
          cp -rf src/UI/dist/* src/Server/src/AspNet/UI
        shell: bash
      - name: Build, Test and Push
        uses: swisslife-oss/actions/release-packages@main
        with:
          tag: ${{ github.ref_name }}
          nuget_api_key: ${{ secrets.NUGET_API_KEY }}
          enable_push: 'yes'

  sonar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
      - name: Restore tools
        run: dotnet tool restore
      - name: Build, Test and Sonar
        uses: swisslife-oss/actions/release-sonar@main
        with:
          tag: ${{ github.ref_name }}
          sonar_token: ${{ secrets.SONAR_TOKEN }}
          sonar_project_key: 'SwissLife-OSS_IdOps'
          sonar_project_name: "IdOps"
          sonar_exclusions: ${{ vars.SONAR_EXCLUSIONS }}
